import java.util.Iterator;

public class ArrayTest1 {

	public void printInfo(String[] info) {
		for (int i = 0; i < info.length; i++) {
			System.out.println(info[i]);
		}
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//1. 배열선언
		int[] arr1;
		int arr2[];
		
		//2. 배열객체 생성
		//배열객체를 생성할 땐 배열의 크기 (해당 배열에 저장할 데이터의 개수)를 지정해야 함.
		arr1 = new int[3];
		
		//3. 인덱스를 사용한 배열영역에 접근
		//배열의 최대 인덱스 번호는 항상 배열의 크기보다 하나 작다.
		arr1[0] = 10;
		arr1[1] = 20;
		arr1[2] = 30;
		
		
		//4. 배열의 요소출력
		for (int i = 0; i < arr1.length; i++) {
			//length : 배열의 크기를 저장하고 있는 속성
			System.out.println("arr1[" + i + "] = " + arr1[i]);
		}
		
		
		//5. 배열의 값을 초기화 시키면서 배열객체 생성하기
		//5-1.
		int[] arr3 = {1,2,3,4};
		
		for (int i = 0; i < arr3.length; i++) {
			//length : 배열의 크기를 저장하고 있는 속성
			System.out.println("arr3[" + i + "] = " + arr3[i]);
		}
		
		//5-2.
		int[] arr4 = new int[] {4,5,6,7};
		System.out.println("int[]arr4 = new int[] {4,5,6,7}");
		for (int i =0; i<arr4.length; i++) {
			//length : 배열의 크기를 저장하고 있는 속성
			System.out.println("arr4[" + i + "] = " + arr4[i]);
	
		}
		
		//5-3. 1번 방식과 2번 방식의 차이점
		//1. 선언과 생성이 분리될 때는 2번 방식만 허용한다.
		int[] arr5;
//		arr5 = {1,2,3};
		arr5 = new int[] {1,2,3};

		//2. 메소드 : 프로그램에서 특정 기능을 수행하는 단위
		//인자 : 메소드 작업을 수행하기 위해서 필요한 값을 전달해주는 단위
		//메소드에 인자로 배열객체를 생성해서 전달할 때는 2번 방식만 허용한다.
		
		ArrayTest1 at1 = new ArrayTest1();
//		at1.printInfo({"aaa", "bbb"});
		at1.printInfo(new String[] {"aaa","bbb","ccc"});
		
		
	}

}
